#
# Copyright (C) 2015-2016  Charles-Antoine Degennes <cadegenn@gmail.com>
# 
# This file is part of The API project
# 
#     The API project is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
# 
#     The API project is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
# 
#     You should have received a copy of the GNU General Public License
#     along with The API project.  If not, see <http://www.gnu.org/licenses/>.
#
# Changelog
# =========
# 2016.05.20, DCA -		add edevel() function

source /etc/init.d/functions

eindent() {
	INDENT="  ${INDENT}"
}
eoutdent() {
	INDENT=${INDENT/  /}
}
ebegin() {
	echo -n "${INDENT}$*"
	# if debug mode, add an empty line (with carriage return) to align properly subsequent eexec calls
	if [ ${DEBUG} ]; then echo; fi
}
equestion() {
    echo -n "${INDENT}$*"
}
eend() {
	local RC=$1
	[ "${DEBUG}" ] && echo -e "\033[2A"
	[ $RC -eq 0 ] && echo_success "$*" || echo_failure "$*"
	# echo_(success|failure) does not seem to carriage return so we do
	echo
}
einfo() {
	echo "${INDENT}$@"
}
eerror() {
	log_failure_msg "${INDENT}ERR: $*"
}
efatal() {
	eerror $*
	exit 1
}
ewarn() {
	echo "${INDENT}WRN: $*"
}
edebug() {
	if [ ${DEBUG} ]; then
		echo "${INDENT}DBG: $@"
		#echo -e "${INDENT}${COLOR_DEBUG}DBG: $@${COLOR_RESET}"
	fi
}
edevel() {
	if [ ${DEVEL} ]; then
		echo -n "${INDENT}DEV: $@"
		#echo -e "${INDENT}${COLOR_DEVEL}DBG: $@${COLOR_RESET}"
	fi
}
eexec() {
	local CMD="$*"
	#[ "${DEBUG}" ] && ${LOGGER} ${LOGGER_OPTIONS} -p ${FACILITY}.debug "DEBUG: ${CMD}"
	edebug "${CMD}">> ${TTY}
	[ "${SIMULATE}" ] && return 0
	if [ "${DEVEL}" ]; then
		eval ${CMD}
	elif [ "${DEBUG}" ]; then
		(eval ${CMD}) > /dev/null
	else
		(eval ${CMD}) > /dev/null 2>&1
	fi
	#echo ${CMD}
	#exec ${CMD}
	local RC=$?
	#[ -f "${OUTPUT}" ] && [ ${VERBOSE} -gt 1 ] && ${LOGGER} ${LOGGER_OPTIONS} -p ${FACILITY}.info -f "${OUTPUT}" && rm -f "${OUTPUT}"
	return ${RC}
}
