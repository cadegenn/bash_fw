#
# Copyright (C) 2015-2016  Charles-Antoine Degennes <cadegenn@gmail.com>
# 
# This file is part of The API project
# 
#     The API project is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
# 
#     The API project is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
# 
#     You should have received a copy of the GNU General Public License
#     along with The API project.  If not, see <http://www.gnu.org/licenses/>.
#
# Changelog
# 2016.03.15, DCA -		eend() can use SuSE's rc_* return codes from /etc/rc.status and returncodes.rc
# 2015.06.10, DCA -		add efatal() function
#

eindent() {
	INDENT="  ${INDENT}"
}
eoutdent() {
	INDENT=${INDENT/  /}
}
ebegin() {
	echo -ne " * ${INDENT}$*" >> ${TTY}
	# if debug mode, add an empty line (with carriage return) to align properly subsequent eexec calls
	if [ ${DEBUG} ]; then echo; fi
}
eend() {
	case $1 in
		${RC_DONE})		echo -e "${rc_done}" >> ${TTY}
						;;
		${RC_FAILED})	echo -e "${rc_failed}" >> ${TTY}
						;;
		${RC_RUNNING})	echo -e "${rc_running}" >> ${TTY}
						;;
		${RC_MISSED})	echo -e "${rc_missed}" >> ${TTY}
						;;
		${RC_SKIPPED})	echo -e "${rc_skipped}" >> ${TTY}
						;;
		${RC_UNUSED})	echo -e "${rc_unused}" >> ${TTY}
						;;
		${RC_UNKNOWN})	echo -e "${rc_unknown}" >> ${TTY}
						;;
		${RC_DEAD})		echo -e "${rc_dead}" >> ${TTY}
						;;
		*)				echo -e "${rc_unknown}" >> ${TTY}
						;;
	esac	
}
einfo() {
	echo -e "${INDENT} * $@" >> ${TTY}
}
eerror() {
	echo -e "${INDENT} * ERR: $*" >> ${TTY}
}
efatal() {
	eerror "$*"
	exit 1
}
ewarn() {
	echo -e "${INDENT} * WRN: $*" >> ${TTY}
}
edebug() {
	if [ ${DEBUG} ]; then
		echo -e "${INDENT} * DBG: $@" >> ${TTY}
	fi
}
eexec() {
	local CMD="$*"
	edebug "${CMD}" >> ${TTY}
	[ "${SIMULATE}" ] && return 0
	if [ "${DEVEL}" ]; then
		eval ${CMD}
	elif [ "${DEBUG}" ]; then
		(eval ${CMD}) > /dev/null
	else
		(eval ${CMD}) > /dev/null 2>&1
	fi
	local RC=$?
	return ${RC}
}

install_dependances() {
	zypper -q -n install lsb-release wol
}
